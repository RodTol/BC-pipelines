pipeline {
    agent { 
        node {
            label 'docker'
            }
      }
    options {
        ansiColor('xterm')
    }
    environment {
        ANSI_RESET = '\u001B[0m'
        ANSI_RED = '\u001B[31m'
    }
    triggers {
        pollSCM 'H * * * *'
    }
    stages {   
        stage('Pull project repository') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_lage_test_ssh', keyFileVariable: 'SSH_LAGE_KEY', passphraseVariable: '', usernameVariable: 'SSH_LAGE_USER')]) {
                        sh '''
                            ssh -i ${SSH_LAGE_KEY} ${SSH_LAGE_USER}@10.128.2.80 '
                                echo '\033[34mHello\033[0m \033[33mcolorful\033[0m \033[35mworld!\033[0m'
                                echo "${ANSI_RED}Current directory: ${ANSI_RESET}" && pwd
                                echo "Running ''git pull'' in BC-pipelines directory"
                                cd BC-pipelines && git pull
                                echo ""
                                echo "${ANSI_RED}ls on my LTS dir${ANSI_RESET}"
                                cd /orfeo/LTS/LADE/LT_storage/tolloi
                            '
                        '''
                    }
                }    
            }
        }
        stage('Create Initial file') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_lage_test_ssh', keyFileVariable: 'SSH_LAGE_KEY', passphraseVariable: '', usernameVariable: 'SSH_LAGE_USER')]) {
                    /**
                        Ricorda che ogni sh è una shell a sè, con le sue env variables
                        quindi se voglio averne di condivise, devo pensare a qualcosa.
                        Roba più banale, me le scrivo, altrimenti ci dovrebbe essere in modo
                        usando Jenkins
                    */
                    sh """
                        ssh -i ${SSH_LAGE_KEY} ${SSH_LAGE_USER}@10.128.2.80 '
                            export INPUT_DIR='/u/dssc/tolloi/LTS'
                            export OUTPUT_DIR='/orfeo/scratch/dssc/tolloi'

                            echo "Running the python script"
                            python BC-pipelines/basecalling-pipeline/configuration.py
                        '
                    """
                }    
            }
        }
        stage('Start basecalling run') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_lage_test_ssh', keyFileVariable: 'SSH_LAGE_KEY', passphraseVariable: '', usernameVariable: 'SSH_LAGE_USER')]) {
                        echo "Starting the basecalling"
                        sh '''
                            #ssh -i ${SSH_LAGE_KEY} ${SSH_LAGE_USER}@10.128.2.80 ls -lrt
                            #ssh -i ${SSH_LAGE_KEY} ${SSH_LAGE_USER}@10.128.2.80 squeue
                            echo "sbatch il commando per far partire la run"
                        '''
                    }
                }
            }
        }
        stage('Create Final file') {
            steps {
                sh '''
                echo "python per creare il file di recap delle perfomance della run"
                '''
            }
        }
        stage('Send Report to User') {
            steps {
                sh '''
                echo "invio il report finale allo user"
                cd basecalling-pipeline
                #bash telegram_bot.sh
                '''
            }
        }
    }
}
