    pipeline {
        agent { 
            node {
                label 'docker'
                }
        }
        parameters {
            /*L'idea è quella di dare come parameter il path al JSON e non il JSON stesso.
            Assumo che il punto di partenza è da dentro la directory del progetto*/
            string(name: 'configFilePath', defaultValue: 'config.json', description: 'Path to the config JSON file')
        }
        triggers {
            pollSCM 'H * * * *'
        }
        stages {
            stage('Slurm cleanup tmp dir') {
                steps {
                    withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                        sh '''
                            ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.80 '
                                cd /u/area/jenkins_onpexp/jenkins_logs
                                rm -r tmp
                                mkdir tmp
                            '    
                        '''
                    }
                }
            }   
            stage('Pull project repository') {
                steps {
                    script {
                        withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                            sh '''
                                ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.80 '
                                    echo "**********Running ''git pull'' in BC-pipelines directory**********"
                                    cd BC-pipelines && git pull
                                '
                            '''
                        }
                    }    
                }
            }
            stage('Read configuration file') {
                steps {
                    withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                        /**
                            Ricorda che ogni sh è una shell a sè, e anche ogni ssh.
                            Per usare quella della sh invece di quella della ssh basta che le metto
                            fra single quotes
                        */
                              
                        sh '''
                            ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.80 '                          
                                cd BC-pipelines/basecalling-pipeline
                                echo "-------Basecalling parameters------"
                                python configuration.py '${configFilePath}'
                            '
                        '''
                    }    
                }
            }
            stage('Start basecalling run') {
                steps {
                    withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                        sh '''
                            ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.80 '
                                echo "**********Launching the basecalling**********"
                                cd ~/BC-pipelines/basecalling-pipeline
                                sbatch ~/BC-pipelines/basecalling-pipeline/BC_scripts/script_resources.sh '${configFilePath}'
                            '    
                        '''
                    }
                }
            }
            stage('Create Final file') {
                steps {
                    sh '''
                    echo "python per creare il file di recap delle perfomance della run"
                    '''
                }
            }
            stage('Send Report to User') {
                steps {
                    sh '''
                    echo "invio il report finale allo user"
                    cd basecalling-pipeline
                    #bash telegram_bot.sh
                    '''
                }
            }
        }
    }
